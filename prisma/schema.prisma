generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transactions {
  id                Int       @id @default(autoincrement())
  senderWalletId    Int
  recipientWalletId Int
  amount            Decimal   @db.Decimal(10, 2)
  createdAt         DateTime? @default(now()) @db.Timestamp(6)
  updatedAt         DateTime? @default(now()) @db.Timestamp(6)
  senderWallet      Wallets   @relation("senderWallet", fields: [senderWalletId], references: [id])
  recipientWallet   Wallets   @relation("recipientWallet", fields: [recipientWalletId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Users {
  id               Int       @id @default(autoincrement())
  username         String    @unique @db.VarChar(255)
  password         String    @db.VarChar(255)
  lastLogin        DateTime? @db.Timestamp(6)
  hashRefreshToken String?   @db.VarChar(255)
  createdAt        DateTime? @default(now()) @db.Timestamp(6)
  updatedAt        DateTime? @default(now()) @db.Timestamp(6)
  wallet           Wallets?
}

model Wallets {
  id                    Int            @id @default(autoincrement())
  userId                Int            @unique
  balance               Decimal?       @default(0.00) @db.Decimal(10, 2)
  createdAt             DateTime?      @default(now()) @db.Timestamp(6)
  updatedAt             DateTime?      @default(now()) @db.Timestamp(6)
  senderTransactions    Transactions[] @relation("senderWallet")
  recipientTransactions Transactions[] @relation("recipientWallet")

  user Users? @relation(fields: [userId], references: [id])
}
